SRC                 := ..
include $(SRC)/build/base.mak

# Target file name.
TARGET = kernel.elf

# List C source files here.
CCSOURCES = main.c gdt.c idt.c print.c lib.c pic.c interrupts.c pit.c v86.c vbe.c video.c bitmap.c serial.c vgamode3.c blit.c

# List C++ source files here
CXXSOURCES =

# List Assembler to be assembled with NASM here
ASOURCES = start.S gdtflush.S interruptStubs.S

# Additional include paths to consider
INCLUDES =	include

# Folder for object files
OBJDIR = obj

# Folder for sourcecode
SRCDIR = src

# C compiler flags
CFLAGS += -m32 -g -nostdlib -nostdinc -fno-builtin -fno-stack-protector -std=gnu99
CFLAGS += -Wall -Wextra -pedantic -Wshadow -Wpointer-arith -Wcast-align \
			-Wwrite-strings -Wmissing-prototypes -Wmissing-declarations \
			-Wredundant-decls -Wnested-externs -Winline -Wno-long-long \
			-Wstrict-prototypes #-Wconversion
CFLAGS += -DARCH_X86 -DDEBUG
CFLAGS += $(addprefix -I,$(INCLUDES))

# C++ compiler flags
CXXFLAGS += -m32 -g -fno-builtin -fno-exceptions -fno-rtti -nostdlib -nostartfiles -nodefaultlibs
CXXFLAGS += -Wall -Wextra -pedantic -Wshadow -Wpointer-arith -Wcast-align \
			-Wwrite-strings -Wredundant-decls -Winline -Wno-long-long \
			-Wconversion #-Werror
CXXFLAGS += -DARCH_X86 -DDEBUG
CXXFLAGS += $(addprefix -I,$(INCLUDES))

# NASM flags
ASFLAGS = -f elf -g

# Linker flags
LDFLAGS = -T linker.ld -Map kernel.map -z max-page-size=0x1000

include $(SRC)/build/targets/c/cTarget.mak
include $(SRC)/build/targets/c/floppyTarget.mak

obj/main.o: include/bitmap_file.h
# Generate the header file for our pretty bitmap
include/bitmap_file.h: resources/bitmap24_RGB888.bmp
	$(call cmd_msg,BIN2HEAD,$< -> $@)
	$(Q)echo "//!!!AUTOGENERATED FILE!!!" >> $@
	$(Q)echo "#ifndef _BITMAP_FILE_H_" >> $@
	$(Q)echo "#define _BITMAP_FILE_H_" >> $@
	$(Q)echo "const uint8_t bitmap_file[] = {" >> $@
	$(Q)hexdump -v -e '"0x" /1 "%02x" ", "' $< >> $@
	$(Q)echo "\n};" >> $@
	$(Q)echo "#endif\n" >> $@

clean_bitmap_header:
	$(Q)rm -rf include/bitmap_file.h

clean: clean_bitmap_header